# Some wmii-perl specific things you may wish to include in your zshrc.

# Tell the client module the pid of the shell, so it can duplicate the cwd.
if [[ -n $WMII_CONFPATH ]]; then
  wmiir xwrite /event ShellWindowPid $(printf "0x%x" $WINDOWID) $$
fi

# The following implements a variation on: https://launchpad.net/undistract-me
# combined with an Xterm title including the running command.
case $TERM in (*xterm*|rxvt*|(dt|k|E)term|screen*)
   local cmdstart curcmd
   cmdstart=0

   precmd () {
     # WINCH trapped to workaround print being interrupted when a terminal is
     # created and resized by wmii. Kinda hacky, but avoids a weird error.
     trap 'true' WINCH
     print -Pn "\e]0;%m: %~\a"

     # Did the last command take longer than 10 seconds?
     if [ "$cmdstart" -gt 0 -a "$[$(date +%s) - $cmdstart]" -gt 10 ]; then
       echo -ne '\e]777;done;'"$$;0;$curcmd"'\a\a'
       cmdstart=0
     fi
     trap - WINCH
   }

   preexec () {
     # Don't break on commands.with line breaks
     curcmd=${${${(pj:\\\\n:)${(f)1}}//\%/%%}//\\/\\\\}
     cmdstart=$(date +%s)
     print -Pn "\e]0;$curcmd (%m: %~)\a"
   }
   ;;
esac

# Prompt, note this doesn't work on its own, treat as an example for how to make the exit code stuff work.
PS1="%{$fg_bold[$HOSTCOLOUR]%}%m:%{$reset_color%} %B%3~%b %{%(?.$fg_bold[$PCOLOUR].$fg_bold[yellow])]777;done;$$;%?;%}%#%{$reset_color%} "
